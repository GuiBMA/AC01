package main

import "fmt"

const M = 5

func main() {
	var lista [M]int
	var n = 0

	insereOrd(&lista, &n, 4)
	fmt.Println(lista)
	insereOrd(&lista, &n, 12)
	fmt.Println(lista)
	insereOrd(&lista, &n, 2)
	fmt.Println(lista)
	insereOrd(&lista, &n, 6)
	fmt.Println(lista)
	insereOrd(&lista, &n, 17)
	fmt.Println(lista)
	insereOrd(&lista, &n, 1)
	fmt.Println(lista)
}

//Implemente um programa em Go que faça inserção de valores inteiros em uma lista alocada sequencialmente, 
//de forma que a lista permaneça sempre ordenada. 
//A solução final deve ser O(n). 
//Caso precise utilizar alguma função de busca, escolha a de menor complexidade para o caso.

func buscaOrd(v [M]int, n, x int) int {
	i := 0
	v[n] = x
	for v[i] < x {
		i++
	}
	if i == n + 1 || v[i] != x {
		return -1
	}
	return i
}

func insereOrd(v *[M]int, n *int, novoValor int) {
	if *n > M {
		fmt.Println("OverFlow")
	} else { 
		for i := 0, i < *n; i++ {
			ind := buscaOrd(v, n, novoValor + i + 1)
			if ind != -1 {
				break
			} else {
				
				
			}
		}
	}
}
